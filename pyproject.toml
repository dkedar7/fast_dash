[tool]
[tool.poetry]
name = "fast_dash"
version = "0.2.1"
homepage = "https://github.com/dkedar7/fast_dash"
description = "Build Machine Learning prototypes web applications lightning fast."
authors = ["Kedar Dabhadkar <kedar@fastdash.app>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10'
]
packages = [
    { include = "fast_dash" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"

Flask = "^2.0.2"
plotly = "^5.5.0"
dash-bootstrap-components = "^1.0.2"
Pillow = "^9.2.0"
dash = "^2.6.1"
dash-mantine-components = "^0.12.1"
numpy = "<=1.25.0"
dash-iconify = "^0.1.2"
matplotlib = "<=3.7.1"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "pytest-cov",
    "selenium",
    "dash"
    ]

dev = ["tox", "pre-commit", "virtualenv", "twine", "toml"]

doc = [
    "mkdocs",
    "livereload",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "mkdocs-jupyter"
    ]


[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
black = "^22.6.0"
isort = "^5.10.1"
flake8-docstrings = "^1.6.0"
pytest-cov = "^3.0.0"
tox = "^3.25.1"
pre-commit = "^2.20.0"
virtualenv = "^20.16.3"
twine = "^4.0.1"
toml = "^0.10.2"
mkdocs = "^1.3.1"
livereload = "^2.6.3"
mkdocs-include-markdown-plugin = "^3.6.1"
mkdocs-material = "9.1.18"
mkdocstrings = "^0.19.0"
mkdocs-autorefs = "^0.4.1"
jupyter-dash = "^0.4.2"
dash = {extras = ["testing"], version = "^2.6.1"}
mkdocstrings-python = "^0.7.1"
mkdocs-jupyter = "^0.24.1"

[tool.poetry.group.test.dependencies]
urllib3 = "1.26.15"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
